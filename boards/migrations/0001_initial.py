# Generated by Django 5.1.4 on 2025-01-14 13:20

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BoardFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=6)),
                ('model', models.CharField(max_length=10)),
                ('resolution', models.CharField(help_text='e.g., ____x___', max_length=9)),
                ('serial_number', models.CharField(max_length=8, unique=True)),
                ('size_inches', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(5)])),
            ],
            options={
                'verbose_name': 'Board Feature',
                'verbose_name_plural': 'Board Features',
                'db_table': 'board_feature',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.FileField(blank=True, upload_to='events/audios/')),
                ('graphic', models.ImageField(blank=True, upload_to='events/graphics/')),
                ('image', models.ImageField(blank=True, upload_to='events/images/')),
                ('text', models.TextField(blank=True)),
                ('video', models.FileField(blank=True, upload_to='events/videos/')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=12, unique=True)),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
                'db_table': 'group',
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=27)),
            ],
            options={
                'verbose_name': 'Publication',
                'verbose_name_plural': 'Publications',
                'db_table': 'publication',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=7)),
                ('last_name', models.CharField(max_length=8)),
                ('role', models.PositiveSmallIntegerField(choices=[(0, 'User'), (1, 'Admin')], default=0)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('location', models.CharField(max_length=10)),
                ('section', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('feature', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='boards_with_feature', to='boards.boardfeature')),
                ('group', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='boards_in_group', to='boards.group')),
            ],
            options={
                'verbose_name': 'Board Master',
                'verbose_name_plural': 'Boards Master',
                'db_table': 'board',
            },
        ),
        migrations.CreateModel(
            name='BoardPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='e.g., yyyy-mm-dd')),
                ('time', models.TimeField(help_text='e.g., HH:mm:ss')),
                ('duration', models.PositiveIntegerField(help_text='e.g., ___ min')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='board_publications', to='boards.board')),
                ('publication', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='publication_on_boards', to='boards.publication')),
            ],
            options={
                'verbose_name': 'Board Publication',
                'verbose_name_plural': 'Board Publications',
                'db_table': 'board_publication',
            },
        ),
        migrations.CreateModel(
            name='PublicationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.FileField(upload_to='publication_files/')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_publication_types', to='boards.event')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publication_types', to='boards.publication')),
            ],
            options={
                'verbose_name': 'Publication Type',
                'verbose_name_plural': 'Publication Types',
                'db_table': 'publication_type',
            },
        ),
        migrations.CreateModel(
            name='Repetition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('board_publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publication_repetitions', to='boards.boardpublication')),
            ],
            options={
                'verbose_name': 'Repetition',
                'verbose_name_plural': 'Repetitions',
                'db_table': 'repetition',
            },
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_date', models.DateTimeField(help_text='e.g., yyyy-mm-dd, HH:mm:ss')),
                ('interaction_type', models.CharField(max_length=2)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_interactions', to='boards.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_interactions', to='boards.user')),
            ],
            options={
                'verbose_name': 'Interaction',
                'verbose_name_plural': 'Interactions',
                'db_table': 'interaction',
            },
        ),
    ]
